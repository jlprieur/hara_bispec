C++**************************************************************************
C Program READ_MAMA
C To read a tape generated by MAMA
C Images and speckle.
C Output file for the details of the input parameters: READ_MAMA.DAT
C JLP
C Version: 20-09-92
C--**************************************************************************
	PROGRAM READ_MAMA
	INTEGER*4 ILUN,IFID
	INTEGER*2 IFUNC,NCARA,IEOF,ISKIP
	INTEGER*2 IBUF(8192)
	INTEGER*4 INUM(20),NBUF
	LOGICAL*1 IBUFT(16384)
	CHARACTER SFILE(20)*60
	CHARACTER ANS*1
	EQUIVALENCE (IBUF(1),IBUFT(1))
 
10	FORMAT(A)
	OPEN(3,STATUS='UNKNOWN',FILE='READ_MAMA.DAT')
 
C**************************************************************
	PRINT *,' (YOU SHOULD HAVE TYPED:'
	PRINT *,' $ASSIGN MTA0: CCD'
	PRINT *,' $MOU/FOR MTA0:)'
	PRINT *,' '
 
	PRINT *,' Format of the files: 1=speckle, 2=images'
	READ(5,*) IFMT
	IF(IFMT.EQ.2) CALL JLP_INQUIFMT
	PRINT *,' Total number of files you want to retrieve (20 max)'
	READ(5,*) NFILE
        WRITE(3,101) NFILE,IFMT
101	FORMAT(' Will retrieve ',I5,' files',/,' Format is ',I2)
	PRINT *,' Enter the file number by increasing order'
	 DO 250 IF=1,NFILE
	   PRINT 270,IF
270	   FORMAT(/,I4,'    FILE NUMBER:',$)
	   READ(5,*) INUM(IF)
	   PRINT 271
271	   FORMAT(' Filename on the disk:',$)
	   READ(5,10) SFILE(IF)
           WRITE(3,102) INUM(IF),SFILE(IF)(1:20) 
102	   FORMAT(' Will write file number ',I5,' as ',A20,' on the disk')
250	 CONTINUE
 
C************************************************************
C Reading the tape
C************************************************************
	WRITE(6,217)
217	FORMAT(/,'-------- Starting the transfer ---------',/)
 
C Each block has 16384 octets
	NCARA=16384
C IFUNC=5 : MONTAGE DE LA BANDE NOM LOGIQUE: CCD
	IFUNC=5
	CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,0,IEOF,'CCD')
	PRINT 269,ILUN,NCARA,IEOF
269	FORMAT(' MTACCESS: Unit #',I5,' Nbytes = ',I5,' Status = ',I5)
	IF(IEOF.NE.0.OR.ILUN.EQ.0)THEN
	    PRINT *,' The tape is not properly mounted'
	    CALL EXIT
	ENDIF
C IFUNC=1 : REMBOBINAGE A TOUT HAZARD...
	IFUNC=1
	CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,0,IEOF,'CCD')
 
C Blocks de 8192 octets (bytes)
	DO 251 NF=1,NFILE
	  IF(NF.EQ.1)THEN
	    ISKIP=INUM(NF)-1
	  ELSE
	    ISKIP=INUM(NF)-INUM(NF-1)-1
	  ENDIF
C Skipping some files (Tape marks EOF) :
555	   IF(ISKIP.NE.0)THEN
	     IFUNC=3
	     CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,ISKIP,IEOF,'CCD')
	     IF(IEOF.NE.0)THEN
               WRITE(6,103) IEOF
               WRITE(3,103) IEOF
103	       FORMAT(/,' >>>>MTACCESS: Error when skipping files...',
     1         ' IEOF =',I5)
	       IF(IEOF.EQ.7)THEN
                  WRITE(6,128)
                  WRITE(3,128)
128               FORMAT(' End of volume is reached. ',
     1            ' Will try to recover this error by attempting',/,
     1            ' to read some data, to skip the next EOF')
	          IFUNC=2
	          NCARA=16384
	          CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,0,IEOF,'CCD')
                  IF(IEOF.EQ.1) THEN
	             WRITE(3,290)
	             WRITE(6,290)
290                  FORMAT(' OK, error recovered, EOF skipped')
                  ELSE
	             WRITE(3,268) IBLOCK,NCARA,IEOF
	             WRITE(6,268) IBLOCK,NCARA,IEOF
268	             FORMAT(' Failure, EOF not found ',I5,
     1         ' blocks read of ',I5,' bytes',
     1	       ' Status =',I5,' (1 if EOF reached)')
                   ENDIF
	       ELSEIF(IEOF.EQ.1)THEN
C JLP 92: Assume that it is nevertheless correct
C	         PRINT *,' As IEOF=1, answer with 0 to the next question'
	         PRINT *,' I assume nevertheless that is is correct'
                 GOTO 556
               ENDIF
	       PRINT *,' Enter number of files to skip: (0, 1, 2,...)?'
	       READ(5,*) ISKIP
               WRITE(3,104) ISKIP
104	       FORMAT(' >>>>> MTACCESS: will skip now ',I5,' files')
	       GOTO 555
	     ENDIF
	   ENDIF
 
C Opening the output file :
556	  WRITE(3,260) INUM(NF),SFILE(NF)(1:20)
	  WRITE(6,260) INUM(NF),SFILE(NF)(1:20)
260	  FORMAT(' Reading file number:',I3,' (on the tape)',4X,
     1	' Name on the disk:',A20)
 
C Speckle data:
	IF(IFMT.EQ.1)THEN
C IMODE=1: write only
	  IMODE=1
	  CALL JLP_OSDOPEN(SFILE(NF),60,IMODE,IFID,ISTAT)
C	  OPEN(1,FILE=SFILE(NF),STATUS='NEW',
C     1	FORM='UNFORMATTED',ERR=1003)
	  IF(ISTAT.NE.0)THEN
	    WRITE(6,*)' Fatal error opening output data file'
	    GOTO 999
	  ENDIF
	  CALL READ_SPECKLE(ILUN,IFID,SFILE(NF))
	  CALL JLP_OSDCLOSE(IFID,ISTAT)
	  IF(ISTAT.NE.0)THEN
	    WRITE(6,*)' Fatal error closing output data file'
	    GOTO 999
	  ENDIF
 
C Image data:
	ELSE
	  CALL READ_IMAGE(ILUN,SFILE(NF))
	ENDIF
 
251	CONTINUE
 
C End :
	CALL MTACCESS(ILUN,1,IBUFT,NCARA,0,IEOF,'CCD')
 
999	CLOSE(3)
	CALL JLP_END
	PRINT *,' Logfile in: READ_MAMA.DAT'
	STOP
	END
 
C-----------------------------------------------------------------
C DOC MTACCESS :
C CETTE ROUTINE TRAVAILLE SUR LES BANDES MAGNETIQUES EN
C MODE PHYSIQUE.
C OPERATIONS:
C		IFUNC=1 --> REMBOBINAGE
C		IFUNC=2 --> LECTURE D'UN ENREGISTREMENT
C		IFUNC=3 --> SKIP DE "ISKIP" FICHIERS (TAPE MARK)
C		IFUNC=4 --> ECRITURE D'UN ENREGISTREMENT
C		IFUNC=5 --> ASSIGNATION D'UN LUN A UN "LOGICAL"
C		IFUNC=6 --> ECRITURE FIN DE FICHIER (TAPE MARK)
C
C	APPEL:
C
C	CALL MTACCESS (ILUN,IFUNC,IBUF,INCAR,ISKIP,IEOF,DEVNAM)
C
C
C	ILUN= NO. UNITE LOGIQUE ASSIGNEE A UN NOM "LOGICAL"
C		INTEGER*2
C
C	IFUNC=FONCTION A REALISER SUR LA BANDE
C		INTEGER*2
C
C	IBUF = BUFFER EN ENTREE OU EN SORTIE
C		LOGICAL*1
C
C	INCAR=NOMBRE DE CARACTERES EN ENTREE OU SORTIE < 32767 CAR.
C		INTEGER*2
C
C	ISKIP=NOMBRE DE FICHIERS A SKIPER >0 EN AVANT , <0 EN ARRIERE
C	DANS CE CAS ON EST JUSTE A LA FIN D'UN FICHIER .
C	LE NOMBRE DE FICHIERS EST PHYSIQUE (I.E NOMBRE DE TAPE MARK)
C		INTEGER*2
C
C	IEOF : CODE RETOUR D'UNE FONCTION DECRITE CI-DESSUS
C		INTEGER*2
C
C	IEOF=1   INDICATEUR FIN DE FICHIER EN ENTREE
C	    =2   ERREUR DE LONGUEUR EN LECTURE DONNEE<REELLE
C	    =3   ERREUR DE PARITE EN LECTURE
C	    =4   FIN DE BANDE PHYSIQUEMENT
C	    =5   VOLUME NON MONTEE MAIS ASSIGNE AVEC UN LOGICAL
C	    =6   DATA CHECK EN ECRITURE (VOIR MAINTENANCE)
C	    =7   FIN DE VOLUME I.E DEUX 'TAPE MARK'
C
C
C	DEVNAM= NOM "LOGICAL" ASSIGNE AU MOMENT DU MOUNT DE LA BANDE
C		CHARACTER* DEVNAM   *=LONGUEUR DU NOM DONNE AU MOMENT
C				      DU MOUNT DE LA BANDE
C
C
C CE PROGRAMME TRAVAILLERA AVEC LE NOM "LOGICAL" DONNE AU MOUNT
C
C
C
C
C***********************************************************************
C
C            EXEMPLE D'UTILISATION DU PROGRAMME :
C	A) LES DECLARATIONS DANS LE PROGRAMME APPELANT :
C		INTEGER*2 ILUN,IFUNC,INCAR,ISKIP,IEOF
C		LOGICAL*1 IBUF( )  ! DONNER LONGUEUR DE IBUF
C		CHARACTER*5 DEVNAM ! ICI 5 CAR LE "LOGICAL" EST TAPE1
C		DATA DEVNAM/'TAPE1'/ ! LE NOM "LOGICAL" ASSIGNE AU MOUNT
C                      		.......
C				........
C 	B) IL FAUT FAIRE LA CORRESPONDANCE POUR AVOIR LE NO. LOGIQUE
C	                   DE ILUN DONNE PAR LE SYSTEME
C		IFUNC=5		! FONCTION ASSIGNATION
C		CALL MTACCESS(ILUN,IFUNC,IBUF,INCAR,ISKIP,IEOF,DEVNAM)
C		!!!!!ATTENTION IL NE FAUT PAS DETRUIRE  ..ILUN...
C		!!!!! IL SERVIRA POUR TOUTE LA SUITE DE VOS OPERATIONS
C				.......
C				........
C		!  MAINTENANT VOUS POUVEZ EXECUTER TOUTES LES AUTRES
C		!  FONCTIONS A VOTRE SOUHAIT ...............
C		! ..........................................
C	C) MAINTENANT IL FAUT LINKER AVEC VOTRE PROGRAMME :
C
C		LINK PROG,.........,'UTL'/LIBRARY
C 		PROG EST VOTRE PROGRAMME
C		............ET LES AUTRES MODULES DE VOTRE ENSEMBLE
C		'UTL'/LIBRARY   LA LIBRAIRIE DES UTILITAIRES DE MEUDON
C
C
C	D) A L'EXECUTION AVANT DE FAIRE LE RUN EXECUTER :
C		- ALLOCATE MT:
C		-MOU 'DEV'/FOR/DENSITY=XXXX
C		-ASSIGN 'DEV' "LOGICAL"
C
C 		'DEV' UNITE ALLOUEE
C		XXXX  LA DENSITE DESIREE
C		"LOGICAL" LE NOM "LOGICAL" DEFINI DANS VOTRE PROG......
C
C
C***********************************************************************
C
C********************************************************************
C Subroutine MAMA_SWAP
C To swap the 2 bytes in a word (PB with the VAX....)
C********************************************************************
	SUBROUTINE MAMA_SWAP(IBUFT,NCARA)
	LOGICAL*1 BUF,IBUFT(*)
	INTEGER*2 NCARA
 
	DO I=1,NCARA-1,2
	  BUF=IBUFT(I)
	  IBUFT(I)=IBUFT(I+1)
	  IBUFT(I+1)=BUF
	END DO
 
	RETURN
	END
 
C********************************************************************
C Subroutine READ_IMAGE
C Read MAMA image data format on tape
C********************************************************************
	SUBROUTINE READ_IMAGE(ILUN,NAME)
	REAL*4 IMAGE(1024,256)
	INTEGER*4 ILUN
	INTEGER*2 IFUNC,NCARA,IEOF
	INTEGER*2 IBUF(8192)
	INTEGER*4 NBUF,IPIXEL
	LOGICAL*1 IBUFT(16384)
	CHARACTER NAME*40,COMMENTS*80
	EQUIVALENCE (IBUF(1),IBUFT(1))
 
	IPIXEL=1
C Normally: 303 blocks but I put more, just to check if O.K.:
	NMAXBLOCK=305
 
	DO IBLOCK=1,NMAXBLOCK
C Reading each block of the tape into IBUFT (IFUNC=2)
	  IFUNC=2
	  NCARA=16384
	  CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,0,IEOF,'CCD')
	    IF(IEOF.NE.0)THEN
	       PRINT 268,IBLOCK,NCARA,IEOF
268	       FORMAT(' >>>> MTACCESS/ Error reading data, at block #',
     1         I5,', Nbytes read',I5,
     1	       ' Status =',I5,' (1 if EOF reached)')
	      GOTO 350
	    ENDIF
C Storing the data:
	  IF(NCARA.EQ.16384) THEN
	      NBUF=NCARA/2
C	      IF(IBLOCK.LE.2)PRINT *,' BEFORE INVERSION'
C	      IF(IBLOCK.LE.2)PRINT *,(IBUF(I),I=1,NBUF)
	      CALL MAMA_SWAP(IBUFT,NCARA)
C	      IF(IBLOCK.LE.2)PRINT *,' AFTER INVERSION'
C	      IF(IBLOCK.LE.2)PRINT *,(IBUF(I),I=1,NBUF)
	      CALL DECODE_IMAGE(IMAGE,IBUF,NBUF,IPIXEL)
	  ELSE
C** First block (header):
	      WRITE(6,9900) (IBUFT(I),I=1,120)
	      WRITE(3,9900) (IBUFT(I),I=1,120)
9900	      FORMAT(' Header: ',60A,/,60A)
 
C Writing the comments for the image:
	      WRITE(COMMENTS,9901) (IBUFT(I),I=1,80)
9901	      FORMAT(80A)
 
	   ENDIF
 
	 END DO
 
C Save the image (256 lines of 1024 pixels)
350	   PRINT *,' Total number of blocks: (=303 ?)',IBLOCK-1
	   PRINT *,' Npixels (=262144 ?)',IPIXEL-1
	   CALL CHECK_ASCII(COMMENTS,80)
C@: PB with non-ascii characters:
	   COMMENTS=' '
	   CALL JLP_WRITEIMAG(IMAGE,1024,256,1024,NAME,
     1	COMMENTS)
 
	RETURN
	END
 
C********************************************************************
C Subroutine DECODE_IMAGE
C to decode the bytes and write the output on the image array:
C********************************************************************
	SUBROUTINE DECODE_IMAGE(IMAGE,IBUF,NBUF,IPIXEL)
	REAL*4 IMAGE(*)
 	INTEGER*2 IBUF(*)
	INTEGER*4 IPIXEL,NBUF
 
	DO I=1,NBUF
	  IMAGE(IPIXEL)=FLOAT(IBUF(I))
	  IPIXEL=IPIXEL+1
	END DO
 
	RETURN
	END
C********************************************************************
C Subroutine READ_SPECKLE
C Read MAMA speckle data format on tape
C********************************************************************
	SUBROUTINE READ_SPECKLE(ILUN,IFID,NAME)
	INTEGER*4 ILUN,IFID,ISTAT
	INTEGER*2 IFUNC,NCARA,IEOF
	INTEGER*2 IBUF(8192)
	INTEGER*4 NBUF,IPIXEL
	LOGICAL*1 IBUFT(16384)
	CHARACTER ANS*1
	EQUIVALENCE (IBUF(1),IBUFT(1))
 
C Speckle data:
C Normally: 303 blocks but I put more, just to be sure to go over the EOF:
C	NMAXBLOCK=305 ?
C JLP 92:
	NMAXBLOCK=303
 
C@ DEBUG:
c@	PRINT *,' Max number of blocks you want to read (MAX=301)'
c@	READ(5,*) NMAXBLOCK
 
c@	PRINT *,' Output of the data before decoding? (n)'
c@	READ(5,'(A)') ANS
 
	DO IBLOCK=1,NMAXBLOCK
C Reading each block of the tape into IBUFT (IFUNC=2)
56	  IFUNC=2
	  NCARA=16384
	  CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,0,IEOF,'CCD')
	    IF(IEOF.EQ.1)THEN
C OK: EOF found:
	      GOTO 251
	    ELSEIF(IEOF.NE.0.AND.IEOF.NE.1)THEN
	       PRINT 268,IBLOCK,NCARA,IEOF
268	       FORMAT(' >>>> MTACCESS/ Error reading data, at block #',
     1         I5,' Nbytes read',I5,
     1	       ' Status =',I5)
	    ENDIF
 
C Detection of errors:
C	  IF(NCARA.EQ.0.AND.IBLOCK.EQ.1) THEN
C	       PRINT *,' Try to skip one step further ? [n]'
C	       READ(5,'(A)') ANS
C	       IF(ANS.NE.'Y'.AND.ANS.NE.'y')GOTO 251
C	       IFUNC=3
C	       CALL MTACCESS(ILUN,IFUNC,IBUFT,NCARA,1,IEOF,'CCD')
C	       GOTO 56
C	  ENDIF
C Storing the data:
	  IF(NCARA.EQ.16384) THEN
	      NBUF=NCARA/2
	      CALL MAMA_SWAP(IBUFT,NCARA)
	         IF((ANS.EQ.'Y').OR.(ANS.EQ.'y'))THEN
	     	    WRITE(9,85) (IBUF(I),I=1,NBUF)
85	    	    FORMAT(10(I6,X),/)
	         ENDIF
C	      WRITE(1) (IBUF(I),I=1,NBUF)
	      CALL JLP_OSDWRITE(IFID,IBUFT,NCARA,ISTAT)
	      IF(ISTAT.EQ.-1)THEN
	        WRITE(6,*)' Fatal error writing output to data file'
	        RETURN
	      ENDIF
	  ELSE
C Typing the header:
	      WRITE(6,9900) (IBUFT(I),I=1,120)
	      WRITE(3,9900) (IBUFT(I),I=1,120)
9900	      FORMAT(' Header: ',60A,/,60A)
	  ENDIF
	END DO
 
251	WRITE(6,252) IBLOCK-1
	WRITE(3,252) IBLOCK-1
252	FORMAT(' End of file ',I5,' blocks read')
	RETURN
	END
C-----------------------------------------------------------------
	SUBROUTINE CHECK_ASCII(COMMENTS,N)
	CHARACTER COMMENTS(N)*1
	DO I=1,N
	  IF(((COMMENTS(I).GE.'0').AND.(COMMENTS(I).LE.'9')).OR.
     1	((COMMENTS(I).GE.'a').AND.(COMMENTS(I).LE.'z')).OR.
     1	((COMMENTS(I).GE.'A').AND.(COMMENTS(I).LE.'Z')).OR.
     1	((COMMENTS(I).GE.';').OR.(COMMENTS(I).LE.':')).OR.
     1	((COMMENTS(I).GE.',').OR.(COMMENTS(I).LE.'#')).OR.
     1	((COMMENTS(I).GE.'(').OR.(COMMENTS(I).LE.')')))THEN
	    CONTINUE
	  ELSE
	    TYPE *,' BAD CHARACTER IN COMMENTS :',COMMENTS(I)
	    COMMENTS(I)=' '
	  ENDIF
99	END DO
	RETURN
	END
C------------------------------------------------------------------
C	include 'jlpsub:mtaccess.for'
